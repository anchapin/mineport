{
  "modId": "mock-forge-mod",
  "name": "Mock Forge Mod",
  "version": "1.0.0",
  "modLoader": "forge",
  "minecraftVersion": "1.19.2",
  "license": "MIT",
  "files": {
    "META-INF/MANIFEST.MF": "Manifest-Version: 1.0\nModId: mock-forge-mod\nVersion: 1.0.0",
    "META-INF/mods.toml": "modId=\"mock-forge-mod\"\nversion=\"1.0.0\"\ndisplayName=\"Mock Forge Mod\"",
    "LICENSE": "MIT License\n\nCopyright (c) 2023 Test Author\n",
    "assets/mock-forge-mod/textures/block/custom_block.png": "BINARY_DATA",
    "assets/mock-forge-mod/textures/item/custom_item.png": "BINARY_DATA",
    "assets/mock-forge-mod/models/block/custom_block.json": "{\"parent\": \"block/cube_all\", \"textures\": {\"all\": \"mock-forge-mod:block/custom_block\"}}",
    "assets/mock-forge-mod/models/item/custom_item.json": "{\"parent\": \"item/generated\", \"textures\": {\"layer0\": \"mock-forge-mod:item/custom_item\"}}",
    "assets/mock-forge-mod/sounds.json": "{\"custom_sound\": {\"category\": \"block\", \"sounds\": [\"mock-forge-mod:custom_sound\"]}}",
    "assets/mock-forge-mod/sounds/custom_sound.ogg": "BINARY_DATA",
    "data/mock-forge-mod/recipes/custom_recipe.json": "{\"type\": \"minecraft:crafting_shaped\", \"pattern\": [\"###\", \"# #\", \"###\"], \"key\": {\"#\": {\"item\": \"minecraft:stone\"}}, \"result\": {\"item\": \"mock-forge-mod:custom_item\"}}",
    "data/mock-forge-mod/loot_tables/blocks/custom_block.json": "{\"type\": \"minecraft:block\", \"pools\": [{\"rolls\": 1, \"entries\": [{\"type\": \"minecraft:item\", \"name\": \"mock-forge-mod:custom_block\"}]}]}",
    "com/example/mockmod/MockMod.class": "BINARY_DATA",
    "com/example/mockmod/blocks/CustomBlock.class": "BINARY_DATA",
    "com/example/mockmod/items/CustomItem.class": "BINARY_DATA"
  },
  "sourceCode": {
    "src/main/java/com/example/mockmod/MockMod.java": "package com.example.mockmod;\n\nimport net.minecraft.world.item.CreativeModeTab;\nimport net.minecraft.world.item.ItemStack;\nimport net.minecraftforge.common.MinecraftForge;\nimport net.minecraftforge.eventbus.api.IEventBus;\nimport net.minecraftforge.fml.common.Mod;\nimport net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;\n\n@Mod(MockMod.MOD_ID)\npublic class MockMod {\n    public static final String MOD_ID = \"mock-forge-mod\";\n    \n    public MockMod() {\n        IEventBus eventBus = FMLJavaModLoadingContext.get().getModEventBus();\n        \n        ModItems.register(eventBus);\n        ModBlocks.register(eventBus);\n        \n        MinecraftForge.EVENT_BUS.register(this);\n    }\n    \n    public static final CreativeModeTab TAB = new CreativeModeTab(MOD_ID) {\n        @Override\n        public ItemStack makeIcon() {\n            return new ItemStack(ModItems.CUSTOM_ITEM.get());\n        }\n    };\n}",
    "src/main/java/com/example/mockmod/ModItems.java": "package com.example.mockmod;\n\nimport com.example.mockmod.items.CustomItem;\nimport net.minecraft.world.item.Item;\nimport net.minecraftforge.eventbus.api.IEventBus;\nimport net.minecraftforge.registries.DeferredRegister;\nimport net.minecraftforge.registries.ForgeRegistries;\nimport net.minecraftforge.registries.RegistryObject;\n\npublic class ModItems {\n    public static final DeferredRegister<Item> ITEMS = \n        DeferredRegister.create(ForgeRegistries.ITEMS, MockMod.MOD_ID);\n    \n    public static final RegistryObject<Item> CUSTOM_ITEM = ITEMS.register(\"custom_item\",\n        () -> new CustomItem(new Item.Properties().tab(MockMod.TAB)));\n    \n    public static void register(IEventBus eventBus) {\n        ITEMS.register(eventBus);\n    }\n}",
    "src/main/java/com/example/mockmod/ModBlocks.java": "package com.example.mockmod;\n\nimport com.example.mockmod.blocks.CustomBlock;\nimport net.minecraft.world.item.BlockItem;\nimport net.minecraft.world.item.Item;\nimport net.minecraft.world.level.block.Block;\nimport net.minecraft.world.level.block.state.BlockBehaviour;\nimport net.minecraft.world.level.material.Material;\nimport net.minecraftforge.eventbus.api.IEventBus;\nimport net.minecraftforge.registries.DeferredRegister;\nimport net.minecraftforge.registries.ForgeRegistries;\nimport net.minecraftforge.registries.RegistryObject;\n\nimport java.util.function.Supplier;\n\npublic class ModBlocks {\n    public static final DeferredRegister<Block> BLOCKS =\n        DeferredRegister.create(ForgeRegistries.BLOCKS, MockMod.MOD_ID);\n    \n    public static final RegistryObject<Block> CUSTOM_BLOCK = registerBlock(\"custom_block\",\n        () -> new CustomBlock(BlockBehaviour.Properties.of(Material.STONE)\n            .strength(6f).requiresCorrectToolForDrops()));\n    \n    private static <T extends Block> RegistryObject<T> registerBlock(String name, Supplier<T> block) {\n        RegistryObject<T> toReturn = BLOCKS.register(name, block);\n        registerBlockItem(name, toReturn);\n        return toReturn;\n    }\n    \n    private static <T extends Block> RegistryObject<Item> registerBlockItem(String name, RegistryObject<T> block) {\n        return ModItems.ITEMS.register(name, () -> new BlockItem(block.get(),\n            new Item.Properties().tab(MockMod.TAB)));\n    }\n    \n    public static void register(IEventBus eventBus) {\n        BLOCKS.register(eventBus);\n    }\n}",
    "src/main/java/com/example/mockmod/blocks/CustomBlock.java": "package com.example.mockmod.blocks;\n\nimport net.minecraft.core.BlockPos;\nimport net.minecraft.sounds.SoundEvents;\nimport net.minecraft.sounds.SoundSource;\nimport net.minecraft.world.InteractionHand;\nimport net.minecraft.world.InteractionResult;\nimport net.minecraft.world.entity.player.Player;\nimport net.minecraft.world.level.Level;\nimport net.minecraft.world.level.block.Block;\nimport net.minecraft.world.level.block.state.BlockState;\nimport net.minecraft.world.phys.BlockHitResult;\n\npublic class CustomBlock extends Block {\n    public CustomBlock(Properties properties) {\n        super(properties);\n    }\n    \n    @Override\n    public InteractionResult use(BlockState state, Level level, BlockPos pos,\n                                Player player, InteractionHand hand, BlockHitResult hit) {\n        if (!level.isClientSide()) {\n            level.playSound(null, pos, SoundEvents.ANVIL_LAND, SoundSource.BLOCKS, 1f, 1f);\n        }\n        \n        return InteractionResult.SUCCESS;\n    }\n}",
    "src/main/java/com/example/mockmod/items/CustomItem.java": "package com.example.mockmod.items;\n\nimport net.minecraft.world.InteractionHand;\nimport net.minecraft.world.InteractionResultHolder;\nimport net.minecraft.world.entity.player.Player;\nimport net.minecraft.world.item.Item;\nimport net.minecraft.world.item.ItemStack;\nimport net.minecraft.world.level.Level;\n\npublic class CustomItem extends Item {\n    public CustomItem(Properties properties) {\n        super(properties);\n    }\n    \n    @Override\n    public InteractionResultHolder<ItemStack> use(Level level, Player player, InteractionHand hand) {\n        ItemStack itemStack = player.getItemInHand(hand);\n        \n        if (!level.isClientSide()) {\n            player.getCooldowns().addCooldown(this, 20);\n        }\n        \n        return InteractionResultHolder.success(itemStack);\n    }\n}"
  }
}